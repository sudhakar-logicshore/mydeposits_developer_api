/**
 * mydeposits - Developer API
 * API services to automate Deposit Protection within your existing Property Management Software workflows and applications for both England & Wales, and also Scotland
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: api@mydeposits.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import APIModelsBatch from '../model/APIModelsBatch';
import APIModelsBatchAddTenancy from '../model/APIModelsBatchAddTenancy';
import APIModelsCheckout from '../model/APIModelsCheckout';
import APIResponsesBatch from '../model/APIResponsesBatch';
import APIResponsesBatchAddTenancy from '../model/APIResponsesBatchAddTenancy';
import APIResponsesBatchCheckout from '../model/APIResponsesBatchCheckout';
import APIResponsesBatchDetails from '../model/APIResponsesBatchDetails';
import APIResponsesBatchList from '../model/APIResponsesBatchList';
import APIResponsesErrorList from '../model/APIResponsesErrorList';
import AuthenticationServicesApi from './AuthenticationServicesApi';

/**
* BatchServices service.
* @module api/BatchServicesApi
* @version 1.2.2
*/
export default class BatchServicesApi {

    /**
    * Constructs a new BatchServicesApi. 
    * @alias module:api/BatchServicesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the batchAddTenancy operation.
     * @callback module:api/BatchServicesApi~batchAddTenancyCallback
     * @param {String} error Error message, if any.
     * @param {module:model/APIResponsesBatchAddTenancy} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add a tenancy deposit protection to an existing batch
     * @param {String} scheme ID of the selected deposit protection Scheme as returned by protectionschemes method.
     * @param {String} region ID of the selected deposit protection Region as returned by protectionregions method.
     * @param {Number} id ID of the Batch resource
     * @param {module:model/APIModelsBatchAddTenancy} value 
     * @param {module:api/BatchServicesApi~batchAddTenancyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/APIResponsesBatchAddTenancy}
     */
    batchAddTenancy(scheme, region, id, value, callback) {
      let postBody = value;
      // verify the required parameter 'scheme' is set
      if (scheme === undefined || scheme === null) {
        throw new Error("Missing the required parameter 'scheme' when calling batchAddTenancy");
      }
      // verify the required parameter 'region' is set
      if (region === undefined || region === null) {
        throw new Error("Missing the required parameter 'region' when calling batchAddTenancy");
      }
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling batchAddTenancy");
      }
      // verify the required parameter 'value' is set
      if (value === undefined || value === null) {
        throw new Error("Missing the required parameter 'value' when calling batchAddTenancy");
      }

      let pathParams = {
        'scheme': scheme,
        'region': region,
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['mydeposits_accessCode'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = APIResponsesBatchAddTenancy;
      return this.apiClient.callApi(
        '/v1/{scheme}/{region}/batch/{id}/tenancy', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the batchCheckout operation.
     * @callback module:api/BatchServicesApi~batchCheckoutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/APIResponsesBatchCheckout} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Checkout a batch containing tenancy deposit protections
     * @param {String} scheme ID of the selected deposit protection Scheme as returned by protectionschemes method.
     * @param {String} region ID of the selected deposit protection Region as returned by protectionregions method.
     * @param {Number} id ID of the Batch resource
     * @param {module:model/APIModelsCheckout} value 
     * @param {module:api/BatchServicesApi~batchCheckoutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/APIResponsesBatchCheckout}
     */
    batchCheckout(scheme, region, id, value, callback) {
      let postBody = value;
      // verify the required parameter 'scheme' is set
      if (scheme === undefined || scheme === null) {
        throw new Error("Missing the required parameter 'scheme' when calling batchCheckout");
      }
      // verify the required parameter 'region' is set
      if (region === undefined || region === null) {
        throw new Error("Missing the required parameter 'region' when calling batchCheckout");
      }
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling batchCheckout");
      }
      // verify the required parameter 'value' is set
      if (value === undefined || value === null) {
        throw new Error("Missing the required parameter 'value' when calling batchCheckout");
      }

      let pathParams = {
        'scheme': scheme,
        'region': region,
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['mydeposits_accessCode'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = APIResponsesBatchCheckout;
      return this.apiClient.callApi(
        '/v1/{scheme}/{region}/batch/{id}/checkout', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the batchGet operation.
     * @callback module:api/BatchServicesApi~batchGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/APIResponsesBatchDetails} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve batch entity details for a batch under a specified mydeposits member account
     * @param {String} scheme ID of the selected deposit protection Scheme as returned by protectionschemes method.
     * @param {String} region ID of the selected deposit protection Region as returned by protectionregions method.
     * @param {Number} id ID of the Batch resource
     * @param {module:api/BatchServicesApi~batchGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/APIResponsesBatchDetails}
     */
    batchGet(scheme, region, id, callback) {
      let postBody = null;
      // verify the required parameter 'scheme' is set
      if (scheme === undefined || scheme === null) {
        throw new Error("Missing the required parameter 'scheme' when calling batchGet");
      }
      // verify the required parameter 'region' is set
      if (region === undefined || region === null) {
        throw new Error("Missing the required parameter 'region' when calling batchGet");
      }
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling batchGet");
      }

      let pathParams = {
        'scheme': scheme,
        'region': region,
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['mydeposits_accessCode'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = APIResponsesBatchDetails;
      return this.apiClient.callApi(
        '/v1/{scheme}/{region}/batch/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the batchGetList operation.
     * @callback module:api/BatchServicesApi~batchGetListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/APIResponsesBatchList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve a list of all batches underneath an account
     * @param {String} scheme ID of the selected deposit protection Scheme as returned by protectionschemes method.
     * @param {String} region ID of the selected deposit protection Region as returned by protectionregions method.
     * @param {module:api/BatchServicesApi~batchGetListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/APIResponsesBatchList}
     */
    batchGetList(scheme, region, callback) {
      let postBody = null;
      // verify the required parameter 'scheme' is set
      if (scheme === undefined || scheme === null) {
        throw new Error("Missing the required parameter 'scheme' when calling batchGetList");
      }
      // verify the required parameter 'region' is set
      if (region === undefined || region === null) {
        throw new Error("Missing the required parameter 'region' when calling batchGetList");
      }

      let pathParams = {
        'scheme': scheme,
        'region': region
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['mydeposits_accessCode'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = APIResponsesBatchList;
      return this.apiClient.callApi(
        '/v1/{scheme}/{region}/batches', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the batchPost operation.
     * @callback module:api/BatchServicesApi~batchPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/APIResponsesBatch} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create new batch entity within a specified mydeposits Custodial account
     * Allows creation of a new batch entity within mydeposits. This entity can be used to group tenancies together for a single payment.
     * @param {String} scheme ID of the selected deposit protection Scheme as returned by protectionschemes method.
     * @param {String} region ID of the selected deposit protection Region as returned by protectionregions method.
     * @param {module:model/APIModelsBatch} body The batch object that needs to be added to the member's account
     * @param {module:api/BatchServicesApi~batchPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/APIResponsesBatch}
     */
    batchPost(scheme, region, body, callback) {
      let postBody = body;
      // verify the required parameter 'scheme' is set
      if (scheme === undefined || scheme === null) {
        throw new Error("Missing the required parameter 'scheme' when calling batchPost");
      }
      // verify the required parameter 'region' is set
      if (region === undefined || region === null) {
        throw new Error("Missing the required parameter 'region' when calling batchPost");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling batchPost");
      }

      let pathParams = {
        'scheme': scheme,
        'region': region
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['mydeposits_accessCode'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = APIResponsesBatch;
      return this.apiClient.callApi(
        '/v1/{scheme}/{region}/batch', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
