/**
 * mydeposits - Developer API
 * API services to automate Deposit Protection within your existing Property Management Software workflows and applications for both England & Wales, and also Scotland
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: api@mydeposits.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import APIModelsCheckout from '../model/APIModelsCheckout';
import APIModelsTenancy from '../model/APIModelsTenancy';
import APIModelsUnprotect from '../model/APIModelsUnprotect';
import APIModelsUnprotectAccept from '../model/APIModelsUnprotectAccept';
import APIResponsesCheckout from '../model/APIResponsesCheckout';
import APIResponsesConvertSPT from '../model/APIResponsesConvertSPT';
import APIResponsesErrorList from '../model/APIResponsesErrorList';
import APIResponsesOTP from '../model/APIResponsesOTP';
import APIResponsesProtectionList from '../model/APIResponsesProtectionList';
import APIResponsesTenancy from '../model/APIResponsesTenancy';
import APIResponsesTenancyDetails from '../model/APIResponsesTenancyDetails';
import APIResponsesUnprotect from '../model/APIResponsesUnprotect';

/**
* TenancyServices service.
* @module api/TenancyServicesApi
* @version 1.2.2
*/
export default class TenancyServicesApi {

    /**
    * Constructs a new TenancyServicesApi. 
    * @alias module:api/TenancyServicesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the tenancyCertificate operation.
     * @callback module:api/TenancyServicesApi~tenancyCertificateCallback
     * @param {String} error Error message, if any.
     * @param {File} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve deposit protection PDF
     * @param {String} scheme ID of the selected deposit protection Scheme as returned by protectionschemes method.
     * @param {String} region ID of the selected deposit protection Region as returned by protectionregions method.
     * @param {Number} id ID of the Tenancy resource
     * @param {module:api/TenancyServicesApi~tenancyCertificateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link File}
     */
    tenancyCertificate(scheme, region, id, callback) {
      let postBody = null;
      // verify the required parameter 'scheme' is set
      if (scheme === undefined || scheme === null) {
        throw new Error("Missing the required parameter 'scheme' when calling tenancyCertificate");
      }
      // verify the required parameter 'region' is set
      if (region === undefined || region === null) {
        throw new Error("Missing the required parameter 'region' when calling tenancyCertificate");
      }
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling tenancyCertificate");
      }

      let pathParams = {
        'scheme': scheme,
        'region': region,
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['mydeposits_accessCode'];
      let contentTypes = [];
      let accepts = ['application/pdf'];
      let returnType = File;
      return this.apiClient.callApi(
        '/v1/{scheme}/{region}/tenancy/{id}/depositprotection', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the tenancyCheckout operation.
     * @callback module:api/TenancyServicesApi~tenancyCheckoutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/APIResponsesCheckout} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Checkout a tenancy deposit protection
     * @param {String} scheme ID of the selected deposit protection Scheme as returned by protectionschemes method.
     * @param {String} region ID of the selected deposit protection Region as returned by protectionregions method.
     * @param {Number} id ID of the Tenancy resource
     * @param {module:model/APIModelsCheckout} value 
     * @param {module:api/TenancyServicesApi~tenancyCheckoutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/APIResponsesCheckout}
     */
    tenancyCheckout(scheme, region, id, value, callback) {
      let postBody = value;
      // verify the required parameter 'scheme' is set
      if (scheme === undefined || scheme === null) {
        throw new Error("Missing the required parameter 'scheme' when calling tenancyCheckout");
      }
      // verify the required parameter 'region' is set
      if (region === undefined || region === null) {
        throw new Error("Missing the required parameter 'region' when calling tenancyCheckout");
      }
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling tenancyCheckout");
      }
      // verify the required parameter 'value' is set
      if (value === undefined || value === null) {
        throw new Error("Missing the required parameter 'value' when calling tenancyCheckout");
      }

      let pathParams = {
        'scheme': scheme,
        'region': region,
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['mydeposits_accessCode'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = APIResponsesCheckout;
      return this.apiClient.callApi(
        '/v1/{scheme}/{region}/tenancy/{id}/checkout', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the tenancyGet operation.
     * @callback module:api/TenancyServicesApi~tenancyGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/APIResponsesTenancyDetails} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve details of a tenancy
     * @param {String} scheme ID of the selected deposit protection Scheme as returned by protectionschemes method.
     * @param {String} region ID of the selected deposit protection Region as returned by protectionregions method.
     * @param {Number} id 
     * @param {module:api/TenancyServicesApi~tenancyGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/APIResponsesTenancyDetails}
     */
    tenancyGet(scheme, region, id, callback) {
      let postBody = null;
      // verify the required parameter 'scheme' is set
      if (scheme === undefined || scheme === null) {
        throw new Error("Missing the required parameter 'scheme' when calling tenancyGet");
      }
      // verify the required parameter 'region' is set
      if (region === undefined || region === null) {
        throw new Error("Missing the required parameter 'region' when calling tenancyGet");
      }
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling tenancyGet");
      }

      let pathParams = {
        'scheme': scheme,
        'region': region,
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['mydeposits_accessCode'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = APIResponsesTenancyDetails;
      return this.apiClient.callApi(
        '/v1/{scheme}/{region}/tenancy/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the tenancyGetList operation.
     * @callback module:api/TenancyServicesApi~tenancyGetListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/APIResponsesProtectionList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve a list of all tenancies underneath an account
     * @param {String} scheme ID of the selected deposit protection Scheme as returned by protectionschemes method.
     * @param {String} region ID of the selected deposit protection Region as returned by protectionregions method.
     * @param {module:api/TenancyServicesApi~tenancyGetListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/APIResponsesProtectionList}
     */
    tenancyGetList(scheme, region, callback) {
      let postBody = null;
      // verify the required parameter 'scheme' is set
      if (scheme === undefined || scheme === null) {
        throw new Error("Missing the required parameter 'scheme' when calling tenancyGetList");
      }
      // verify the required parameter 'region' is set
      if (region === undefined || region === null) {
        throw new Error("Missing the required parameter 'region' when calling tenancyGetList");
      }

      let pathParams = {
        'scheme': scheme,
        'region': region
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['mydeposits_accessCode'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = APIResponsesProtectionList;
      return this.apiClient.callApi(
        '/v1/{scheme}/{region}/tenancies', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the tenancyPost operation.
     * @callback module:api/TenancyServicesApi~tenancyPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/APIResponsesTenancy} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create new tenancy record within a specified mydeposits member account
     * Allows creation of a new tenancy record within the mydeposits member account for the chosen scheme and region.
     * @param {String} scheme ID of the selected deposit protection Scheme as returned by protectionschemes method.
     * @param {String} region ID of the selected deposit protection Region as returned by protectionregions method.
     * @param {module:model/APIModelsTenancy} body Tenancy object that needs adding to the members account
     * @param {module:api/TenancyServicesApi~tenancyPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/APIResponsesTenancy}
     */
    tenancyPost(scheme, region, body, callback) {
      let postBody = body;
      // verify the required parameter 'scheme' is set
      if (scheme === undefined || scheme === null) {
        throw new Error("Missing the required parameter 'scheme' when calling tenancyPost");
      }
      // verify the required parameter 'region' is set
      if (region === undefined || region === null) {
        throw new Error("Missing the required parameter 'region' when calling tenancyPost");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling tenancyPost");
      }

      let pathParams = {
        'scheme': scheme,
        'region': region
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['mydeposits_accessCode'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = APIResponsesTenancy;
      return this.apiClient.callApi(
        '/v1/{scheme}/{region}/tenancy', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the tenancyUnprotect operation.
     * @callback module:api/TenancyServicesApi~tenancyUnprotectCallback
     * @param {String} error Error message, if any.
     * @param {module:model/APIResponsesUnprotect} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Submit a request to initiate a deposit release
     * @param {String} signature Hashed request body (HMAC-SHA512) Hashing key = (OTP/Private key) + TenancyID e.g. OTP = '123', TenancyID = 456 - Hashing key = 123456 
     * @param {String} scheme ID of the selected deposit protection Scheme as returned by protectionschemes method.
     * @param {String} region ID of the selected deposit protection Region as returned by protectionregions method.
     * @param {Number} id ID of the Tenancy resource
     * @param {module:model/APIModelsUnprotect} value 
     * @param {module:api/TenancyServicesApi~tenancyUnprotectCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/APIResponsesUnprotect}
     */
    tenancyUnprotect(signature, scheme, region, id, value, callback) {
      let postBody = value;
      // verify the required parameter 'signature' is set
      if (signature === undefined || signature === null) {
        throw new Error("Missing the required parameter 'signature' when calling tenancyUnprotect");
      }
      // verify the required parameter 'scheme' is set
      if (scheme === undefined || scheme === null) {
        throw new Error("Missing the required parameter 'scheme' when calling tenancyUnprotect");
      }
      // verify the required parameter 'region' is set
      if (region === undefined || region === null) {
        throw new Error("Missing the required parameter 'region' when calling tenancyUnprotect");
      }
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling tenancyUnprotect");
      }
      // verify the required parameter 'value' is set
      if (value === undefined || value === null) {
        throw new Error("Missing the required parameter 'value' when calling tenancyUnprotect");
      }

      let pathParams = {
        'scheme': scheme,
        'region': region,
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
        'signature': signature
      };
      let formParams = {
      };

      let authNames = ['mydeposits_accessCode'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = APIResponsesUnprotect;
      return this.apiClient.callApi(
        '/v1/{scheme}/{region}/tenancy/{id}/unprotect', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the tenancyUnprotectAccept operation.
     * @callback module:api/TenancyServicesApi~tenancyUnprotectAcceptCallback
     * @param {String} error Error message, if any.
     * @param {module:model/APIResponsesUnprotect} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Custodial only - Accept a tenant's deposit release request
     * @param {String} signature Hashed request body (HMAC-SHA512) Hashing key = (OTP/Private key) + TenancyID e.g. OTP = '123', TenancyID = 456 - Hashing key = 123456 
     * @param {String} scheme ID of the selected deposit protection Scheme as returned by protectionschemes method.
     * @param {String} region ID of the selected deposit protection Region as returned by protectionregions method.
     * @param {Number} id ID of the Tenancy resource
     * @param {module:model/APIModelsUnprotectAccept} value 
     * @param {module:api/TenancyServicesApi~tenancyUnprotectAcceptCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/APIResponsesUnprotect}
     */
    tenancyUnprotectAccept(signature, scheme, region, id, value, callback) {
      let postBody = value;
      // verify the required parameter 'signature' is set
      if (signature === undefined || signature === null) {
        throw new Error("Missing the required parameter 'signature' when calling tenancyUnprotectAccept");
      }
      // verify the required parameter 'scheme' is set
      if (scheme === undefined || scheme === null) {
        throw new Error("Missing the required parameter 'scheme' when calling tenancyUnprotectAccept");
      }
      // verify the required parameter 'region' is set
      if (region === undefined || region === null) {
        throw new Error("Missing the required parameter 'region' when calling tenancyUnprotectAccept");
      }
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling tenancyUnprotectAccept");
      }
      // verify the required parameter 'value' is set
      if (value === undefined || value === null) {
        throw new Error("Missing the required parameter 'value' when calling tenancyUnprotectAccept");
      }

      let pathParams = {
        'scheme': scheme,
        'region': region,
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
        'signature': signature
      };
      let formParams = {
      };

      let authNames = ['mydeposits_accessCode'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = APIResponsesUnprotect;
      return this.apiClient.callApi(
        '/v1/{scheme}/{region}/tenancy/{id}/unprotect/accept', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the tenancyUnprotectCounter operation.
     * @callback module:api/TenancyServicesApi~tenancyUnprotectCounterCallback
     * @param {String} error Error message, if any.
     * @param {module:model/APIResponsesUnprotect} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Custodial only - Submit a counter offer to a tenant's release request
     * @param {String} signature Hashed request body (HMAC-SHA512) Hashing key = (OTP/Private key) + TenancyID e.g. OTP = '123', TenancyID = 456 - Hashing key = 123456 
     * @param {String} scheme ID of the selected deposit protection Scheme as returned by protectionschemes method.
     * @param {String} region ID of the selected deposit protection Region as returned by protectionregions method.
     * @param {Number} id ID of the Tenancy resource
     * @param {module:model/APIModelsUnprotect} value 
     * @param {module:api/TenancyServicesApi~tenancyUnprotectCounterCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/APIResponsesUnprotect}
     */
    tenancyUnprotectCounter(signature, scheme, region, id, value, callback) {
      let postBody = value;
      // verify the required parameter 'signature' is set
      if (signature === undefined || signature === null) {
        throw new Error("Missing the required parameter 'signature' when calling tenancyUnprotectCounter");
      }
      // verify the required parameter 'scheme' is set
      if (scheme === undefined || scheme === null) {
        throw new Error("Missing the required parameter 'scheme' when calling tenancyUnprotectCounter");
      }
      // verify the required parameter 'region' is set
      if (region === undefined || region === null) {
        throw new Error("Missing the required parameter 'region' when calling tenancyUnprotectCounter");
      }
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling tenancyUnprotectCounter");
      }
      // verify the required parameter 'value' is set
      if (value === undefined || value === null) {
        throw new Error("Missing the required parameter 'value' when calling tenancyUnprotectCounter");
      }

      let pathParams = {
        'scheme': scheme,
        'region': region,
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
        'signature': signature
      };
      let formParams = {
      };

      let authNames = ['mydeposits_accessCode'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = APIResponsesUnprotect;
      return this.apiClient.callApi(
        '/v1/{scheme}/{region}/tenancy/{id}/unprotect/counter', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the tenancyUnprotectOTP operation.
     * @callback module:api/TenancyServicesApi~tenancyUnprotectOTPCallback
     * @param {String} error Error message, if any.
     * @param {module:model/APIResponsesOTP} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Request a One Time Password to initiate or respond to a release
     * @param {String} scheme ID of the selected deposit protection Scheme as returned by protectionschemes method.
     * @param {String} region ID of the selected deposit protection Region as returned by protectionregions method.
     * @param {Number} id ID of the Tenancy resource
     * @param {module:api/TenancyServicesApi~tenancyUnprotectOTPCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/APIResponsesOTP}
     */
    tenancyUnprotectOTP(scheme, region, id, callback) {
      let postBody = null;
      // verify the required parameter 'scheme' is set
      if (scheme === undefined || scheme === null) {
        throw new Error("Missing the required parameter 'scheme' when calling tenancyUnprotectOTP");
      }
      // verify the required parameter 'region' is set
      if (region === undefined || region === null) {
        throw new Error("Missing the required parameter 'region' when calling tenancyUnprotectOTP");
      }
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling tenancyUnprotectOTP");
      }

      let pathParams = {
        'scheme': scheme,
        'region': region,
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['mydeposits_accessCode'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = APIResponsesOTP;
      return this.apiClient.callApi(
        '/v1/{scheme}/{region}/tenancy/{id}/otp', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the tenancyUnprotectSPT operation.
     * @callback module:api/TenancyServicesApi~tenancyUnprotectSPTCallback
     * @param {String} error Error message, if any.
     * @param {module:model/APIResponsesConvertSPT} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Insurance only - Convert a live protection to a statutory periodic tenancy
     * @param {String} scheme ID of the selected deposit protection Scheme as returned by protectionschemes method.
     * @param {String} region ID of the selected deposit protection Region as returned by protectionregions method.
     * @param {Number} id ID of the Tenancy resource
     * @param {module:api/TenancyServicesApi~tenancyUnprotectSPTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/APIResponsesConvertSPT}
     */
    tenancyUnprotectSPT(scheme, region, id, callback) {
      let postBody = null;
      // verify the required parameter 'scheme' is set
      if (scheme === undefined || scheme === null) {
        throw new Error("Missing the required parameter 'scheme' when calling tenancyUnprotectSPT");
      }
      // verify the required parameter 'region' is set
      if (region === undefined || region === null) {
        throw new Error("Missing the required parameter 'region' when calling tenancyUnprotectSPT");
      }
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling tenancyUnprotectSPT");
      }

      let pathParams = {
        'scheme': scheme,
        'region': region,
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['mydeposits_accessCode'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = APIResponsesConvertSPT;
      return this.apiClient.callApi(
        '/v1/{scheme}/{region}/tenancy/{id}/convertspt', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
