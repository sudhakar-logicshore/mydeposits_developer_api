/**
 * mydeposits - Developer API
 * API services to automate Deposit Protection within your existing Property Management Software workflows and applications for both England & Wales, and also Scotland
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: api@mydeposits.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import APIModelsToken from '../model/APIModelsToken';
import APIResponsesToken from '../model/APIResponsesToken';
import InlineResponse200 from '../model/InlineResponse200';

/**
* AuthenticationServices service.
* @module api/AuthenticationServicesApi
* @version 1.2.2
*/
export default class AuthenticationServicesApi {

    /**
    * Constructs a new AuthenticationServicesApi. 
    * @alias module:api/AuthenticationServicesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the authorisationCreate operation.
     * @callback module:api/AuthenticationServicesApi~authorisationCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Request authorisation for a given member
     * @param {String} scheme ID of the selected deposit protection Scheme as returned by protectionschemes method.
     * @param {String} region ID of the selected deposit protection Region as returned by protectionregions method.
     * @param {module:api/AuthenticationServicesApi~authorisationCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse200}
     */
    authorisationCreate(scheme, region, callback) {
      let postBody = null;
      // verify the required parameter 'scheme' is set
      if (scheme === undefined || scheme === null) {
        throw new Error("Missing the required parameter 'scheme' when calling authorisationCreate");
      }
      // verify the required parameter 'region' is set
      if (region === undefined || region === null) {
        throw new Error("Missing the required parameter 'region' when calling authorisationCreate");
      }

      let pathParams = {
        'scheme': scheme,
        'region': region
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['mydeposits_accessCode'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse200;
      return this.apiClient.callApi(
        '/v1/{scheme}/{region}/authorize', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the tokenCreate operation.
     * @callback module:api/AuthenticationServicesApi~tokenCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/APIResponsesToken} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Request a token for a given member
     * @param {String} scheme ID of the selected deposit protection Scheme as returned by protectionschemes method.
     * @param {String} region ID of the selected deposit protection Region as returned by protectionregions method.
     * @param {module:model/APIModelsToken} value 
     * @param {module:api/AuthenticationServicesApi~tokenCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/APIResponsesToken}
     */
    tokenCreate(scheme, region, value, callback) {
      // verify the required parameter 'scheme' is set
      if (scheme === undefined || scheme === null) {
        throw new Error("Missing the required parameter 'scheme' when calling tokenCreate");
      }
      // verify the required parameter 'region' is set
      if (region === undefined || region === null) {
        throw new Error("Missing the required parameter 'region' when calling tokenCreate");
      }
      // verify the required parameter 'value' is set
      if (value === undefined || value === null) {
        throw new Error("Missing the required parameter 'value' when calling tokenCreate");
      }

      let pathParams = {
        'scheme': scheme,
        'region': region
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = value;

      let authNames = [];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = APIResponsesToken;
      return this.apiClient.callApi(
        '/v1/{scheme}/{region}/token', 'POST',
        pathParams, queryParams, headerParams, formParams, {},
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }
}
