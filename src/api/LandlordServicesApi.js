/**
 * mydeposits - Developer API
 * API services to automate Deposit Protection within your existing Property Management Software workflows and applications for both England & Wales, and also Scotland
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: api@mydeposits.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import APIModelsLandlord from '../model/APIModelsLandlord';
import APIResponsesErrorList from '../model/APIResponsesErrorList';
import APIResponsesLandlord from '../model/APIResponsesLandlord';
import APIResponsesLandlordDetails from '../model/APIResponsesLandlordDetails';

/**
* LandlordServices service.
* @module api/LandlordServicesApi
* @version 1.2.2
*/
export default class LandlordServicesApi {

    /**
    * Constructs a new LandlordServicesApi. 
    * @alias module:api/LandlordServicesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the landlordGet operation.
     * @callback module:api/LandlordServicesApi~landlordGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/APIResponsesLandlordDetails} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve landlord entity details for a landlord under a specified mydeposits member account
     * @param {String} scheme ID of the selected deposit protection Scheme as returned by protectionschemes method.
     * @param {String} region ID of the selected deposit protection Region as returned by protectionregions method.
     * @param {Number} id Landlord ID
     * @param {module:api/LandlordServicesApi~landlordGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/APIResponsesLandlordDetails}
     */
    landlordGet(scheme, region, id, callback) {
      let postBody = null;
      // verify the required parameter 'scheme' is set
      if (scheme === undefined || scheme === null) {
        throw new Error("Missing the required parameter 'scheme' when calling landlordGet");
      }
      // verify the required parameter 'region' is set
      if (region === undefined || region === null) {
        throw new Error("Missing the required parameter 'region' when calling landlordGet");
      }
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling landlordGet");
      }

      let pathParams = {
        'scheme': scheme,
        'region': region,
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['mydeposits_accessCode'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = APIResponsesLandlordDetails;
      return this.apiClient.callApi(
        '/v1/{scheme}/{region}/landlord/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the landlordPost operation.
     * @callback module:api/LandlordServicesApi~landlordPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/APIResponsesLandlord} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create new landlord entity within a specified mydeposits member account
     * Allows creation of a new landlord entity within mydeposits. This record can be used when creating a new tenancy record.
     * @param {String} scheme ID of the selected deposit protection Scheme as returned by protectionschemes method.
     * @param {String} region ID of the selected deposit protection Region as returned by protectionregions method.
     * @param {module:model/APIModelsLandlord} body The landlord object that needs to be added to the agent account
     * @param {module:api/LandlordServicesApi~landlordPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/APIResponsesLandlord}
     */
    landlordPost(scheme, region, body, callback) {
      let postBody = body;
      // verify the required parameter 'scheme' is set
      if (scheme === undefined || scheme === null) {
        throw new Error("Missing the required parameter 'scheme' when calling landlordPost");
      }
      // verify the required parameter 'region' is set
      if (region === undefined || region === null) {
        throw new Error("Missing the required parameter 'region' when calling landlordPost");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling landlordPost");
      }

      let pathParams = {
        'scheme': scheme,
        'region': region
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['mydeposits_accessCode'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = APIResponsesLandlord;
      return this.apiClient.callApi(
        '/v1/{scheme}/{region}/landlord', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the landlordPut operation.
     * @callback module:api/LandlordServicesApi~landlordPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/APIResponsesLandlord} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a landlord entity within a specified mydeposits member account
     * @param {String} scheme ID of the selected deposit protection Scheme as returned by protectionschemes method.
     * @param {String} region ID of the selected deposit protection Region as returned by protectionregions method.
     * @param {Number} id Landlord ID
     * @param {module:model/APIModelsLandlord} value Models.Landlord
     * @param {module:api/LandlordServicesApi~landlordPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/APIResponsesLandlord}
     */
    landlordPut(scheme, region, id, value, callback) {
      let postBody = value;
      // verify the required parameter 'scheme' is set
      if (scheme === undefined || scheme === null) {
        throw new Error("Missing the required parameter 'scheme' when calling landlordPut");
      }
      // verify the required parameter 'region' is set
      if (region === undefined || region === null) {
        throw new Error("Missing the required parameter 'region' when calling landlordPut");
      }
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling landlordPut");
      }
      // verify the required parameter 'value' is set
      if (value === undefined || value === null) {
        throw new Error("Missing the required parameter 'value' when calling landlordPut");
      }

      let pathParams = {
        'scheme': scheme,
        'region': region,
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['mydeposits_accessCode'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = APIResponsesLandlord;
      return this.apiClient.callApi(
        '/v1/{scheme}/{region}/landlord/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
