/**
 * mydeposits - Developer API
 * API services to automate Deposit Protection within your existing Property Management Software workflows and applications for both England & Wales, and also Scotland
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: api@mydeposits.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The APIModelsBranch model module.
 * @module model/APIModelsBranch
 * @version 1.2.2
 */
class APIModelsBranch {
    /**
     * Constructs a new <code>APIModelsBranch</code>.
     * Details of an branch for a corporate landlord or agent member
     * @alias module:model/APIModelsBranch
     * @param branchName {String} Must be 50 characters or less
     * @param thirdPartyReference {String} Must be 100 characters or less
     * @param addressLine1 {String} Must be 100 characters or less
     * @param postcode {String} Must be 8 characters or less
     * @param emailAddress {String} Must be 255 characters or less.
     * @param branchTelephone {String} Must be 15 characters or less
     */
    constructor(branchName, thirdPartyReference, addressLine1, postcode, emailAddress, branchTelephone) { 
        
        APIModelsBranch.initialize(this, branchName, thirdPartyReference, addressLine1, postcode, emailAddress, branchTelephone);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, branchName, thirdPartyReference, addressLine1, postcode, emailAddress, branchTelephone) { 
        obj['branchName'] = branchName;
        obj['thirdPartyReference'] = thirdPartyReference;
        obj['addressLine1'] = addressLine1;
        obj['postcode'] = postcode;
        obj['emailAddress'] = emailAddress;
        obj['branchTelephone'] = branchTelephone;
    }

    /**
     * Constructs a <code>APIModelsBranch</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/APIModelsBranch} obj Optional instance to populate.
     * @return {module:model/APIModelsBranch} The populated <code>APIModelsBranch</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new APIModelsBranch();

            if (data.hasOwnProperty('branchName')) {
                obj['branchName'] = ApiClient.convertToType(data['branchName'], 'String');
            }
            if (data.hasOwnProperty('parentBranchID')) {
                obj['parentBranchID'] = ApiClient.convertToType(data['parentBranchID'], 'String');
            }
            if (data.hasOwnProperty('thirdPartyReference')) {
                obj['thirdPartyReference'] = ApiClient.convertToType(data['thirdPartyReference'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('firstName')) {
                obj['firstName'] = ApiClient.convertToType(data['firstName'], 'String');
            }
            if (data.hasOwnProperty('lastName')) {
                obj['lastName'] = ApiClient.convertToType(data['lastName'], 'String');
            }
            if (data.hasOwnProperty('addressLine1')) {
                obj['addressLine1'] = ApiClient.convertToType(data['addressLine1'], 'String');
            }
            if (data.hasOwnProperty('addressLine2')) {
                obj['addressLine2'] = ApiClient.convertToType(data['addressLine2'], 'String');
            }
            if (data.hasOwnProperty('addressLine3')) {
                obj['addressLine3'] = ApiClient.convertToType(data['addressLine3'], 'String');
            }
            if (data.hasOwnProperty('addressLine4')) {
                obj['addressLine4'] = ApiClient.convertToType(data['addressLine4'], 'String');
            }
            if (data.hasOwnProperty('postcode')) {
                obj['postcode'] = ApiClient.convertToType(data['postcode'], 'String');
            }
            if (data.hasOwnProperty('emailAddress')) {
                obj['emailAddress'] = ApiClient.convertToType(data['emailAddress'], 'String');
            }
            if (data.hasOwnProperty('mobileTelephone')) {
                obj['mobileTelephone'] = ApiClient.convertToType(data['mobileTelephone'], 'String');
            }
            if (data.hasOwnProperty('branchTelephone')) {
                obj['branchTelephone'] = ApiClient.convertToType(data['branchTelephone'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Must be 50 characters or less
 * @member {String} branchName
 */
APIModelsBranch.prototype['branchName'] = undefined;

/**
 * Must be 50 characters or less
 * @member {String} parentBranchID
 */
APIModelsBranch.prototype['parentBranchID'] = undefined;

/**
 * Must be 100 characters or less
 * @member {String} thirdPartyReference
 */
APIModelsBranch.prototype['thirdPartyReference'] = undefined;

/**
 * Required field for Insurance only
 * @member {module:model/APIModelsBranch.TitleEnum} title
 */
APIModelsBranch.prototype['title'] = undefined;

/**
 * Required for Insurance only. 50 characters or less
 * @member {String} firstName
 */
APIModelsBranch.prototype['firstName'] = undefined;

/**
 * Required for Insurance only. 50 characters or less
 * @member {String} lastName
 */
APIModelsBranch.prototype['lastName'] = undefined;

/**
 * Must be 100 characters or less
 * @member {String} addressLine1
 */
APIModelsBranch.prototype['addressLine1'] = undefined;

/**
 * Must be 100 characters or less
 * @member {String} addressLine2
 */
APIModelsBranch.prototype['addressLine2'] = undefined;

/**
 * Must be 100 characters or less
 * @member {String} addressLine3
 */
APIModelsBranch.prototype['addressLine3'] = undefined;

/**
 * Must be 100 characters or less
 * @member {String} addressLine4
 */
APIModelsBranch.prototype['addressLine4'] = undefined;

/**
 * Must be 8 characters or less
 * @member {String} postcode
 */
APIModelsBranch.prototype['postcode'] = undefined;

/**
 * Must be 255 characters or less.
 * @member {String} emailAddress
 */
APIModelsBranch.prototype['emailAddress'] = undefined;

/**
 * Must be 15 characters or less
 * @member {String} mobileTelephone
 */
APIModelsBranch.prototype['mobileTelephone'] = undefined;

/**
 * Must be 15 characters or less
 * @member {String} branchTelephone
 */
APIModelsBranch.prototype['branchTelephone'] = undefined;





/**
 * Allowed values for the <code>title</code> property.
 * @enum {String}
 * @readonly
 */
APIModelsBranch['TitleEnum'] = {

    /**
     * value: "Mr"
     * @const
     */
    "Mr": "Mr",

    /**
     * value: "Mrs"
     * @const
     */
    "Mrs": "Mrs",

    /**
     * value: "Miss"
     * @const
     */
    "Miss": "Miss",

    /**
     * value: "Ms"
     * @const
     */
    "Ms": "Ms",

    /**
     * value: "Dr"
     * @const
     */
    "Dr": "Dr",

    /**
     * value: "Lady"
     * @const
     */
    "Lady": "Lady",

    /**
     * value: "Lord"
     * @const
     */
    "Lord": "Lord",

    /**
     * value: "Professor"
     * @const
     */
    "Professor": "Professor",

    /**
     * value: "Sir"
     * @const
     */
    "Sir": "Sir"
};



export default APIModelsBranch;

