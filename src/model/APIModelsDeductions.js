/**
 * mydeposits - Developer API
 * API services to automate Deposit Protection within your existing Property Management Software workflows and applications for both England & Wales, and also Scotland
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: api@mydeposits.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DeductionReasons from './DeductionReasons';

/**
 * The APIModelsDeductions model module.
 * @module model/APIModelsDeductions
 * @version 1.2.2
 */
class APIModelsDeductions {
    /**
     * Constructs a new <code>APIModelsDeductions</code>.
     * A single deduction for a deposit release request
     * @alias module:model/APIModelsDeductions
     * @param deductionReason {module:model/DeductionReasons} 
     * @param deductionAmount {String} The amount you wish to deduct for this deduction reason
     */
    constructor(deductionReason, deductionAmount) { 
        
        APIModelsDeductions.initialize(this, deductionReason, deductionAmount);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, deductionReason, deductionAmount) { 
        obj['deductionReason'] = deductionReason;
        obj['deductionAmount'] = deductionAmount;
    }

    /**
     * Constructs a <code>APIModelsDeductions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/APIModelsDeductions} obj Optional instance to populate.
     * @return {module:model/APIModelsDeductions} The populated <code>APIModelsDeductions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new APIModelsDeductions();

            if (data.hasOwnProperty('deductionReason')) {
                obj['deductionReason'] = DeductionReasons.constructFromObject(data['deductionReason']);
            }
            if (data.hasOwnProperty('deductionAmount')) {
                obj['deductionAmount'] = ApiClient.convertToType(data['deductionAmount'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/DeductionReasons} deductionReason
 */
APIModelsDeductions.prototype['deductionReason'] = undefined;

/**
 * The amount you wish to deduct for this deduction reason
 * @member {String} deductionAmount
 */
APIModelsDeductions.prototype['deductionAmount'] = undefined;






export default APIModelsDeductions;

