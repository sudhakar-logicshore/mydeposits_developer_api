/**
 * mydeposits - Developer API
 * API services to automate Deposit Protection within your existing Property Management Software workflows and applications for both England & Wales, and also Scotland
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: api@mydeposits.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The APIModelsToken model module.
 * @module model/APIModelsToken
 * @version 1.2.2
 */
class APIModelsToken {
    /**
     * Constructs a new <code>APIModelsToken</code>.
     * An object holding information about user info
     * @alias module:model/APIModelsToken
     * @param clientId {String} provided by my deposit
     * @param clientSecret {String} provided by my deposit
     * @param username {String} user name to login
     * @param password {String} user password to validate
     * @param grantType {String} grant type - password
     */
    constructor(clientId, clientSecret, username, password, grantType) { 
        
        APIModelsToken.initialize(this, clientId, clientSecret, username, password, grantType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, clientId, clientSecret, username, password, grantType) { 
        obj['client_id'] = clientId;
        obj['client_secret'] = clientSecret;
        obj['username'] = username;
        obj['password'] = password;
        obj['grant_type'] = grantType;
    }

    /**
     * Constructs a <code>APIModelsToken</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/APIModelsToken} obj Optional instance to populate.
     * @return {module:model/APIModelsToken} The populated <code>APIModelsToken</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new APIModelsToken();

            if (data.hasOwnProperty('client_id')) {
                obj['client_id'] = ApiClient.convertToType(data['client_id'], 'String');
            }
            if (data.hasOwnProperty('client_secret')) {
                obj['client_secret'] = ApiClient.convertToType(data['client_secret'], 'String');
            }
            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
            if (data.hasOwnProperty('password')) {
                obj['password'] = ApiClient.convertToType(data['password'], 'String');
            }
            if (data.hasOwnProperty('grant_type')) {
                obj['grant_type'] = ApiClient.convertToType(data['grant_type'], 'String');
            }
        }
        return obj;
    }


}

/**
 * provided by my deposit
 * @member {String} client_id
 */
APIModelsToken.prototype['client_id'] = undefined;

/**
 * provided by my deposit
 * @member {String} client_secret
 */
APIModelsToken.prototype['client_secret'] = undefined;

/**
 * user name to login
 * @member {String} username
 */
APIModelsToken.prototype['username'] = undefined;

/**
 * user password to validate
 * @member {String} password
 */
APIModelsToken.prototype['password'] = undefined;

/**
 * grant type - password
 * @member {String} grant_type
 */
APIModelsToken.prototype['grant_type'] = undefined;






export default APIModelsToken;

